version: "3"

services:
  database:
    image: postgres:9.6
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
  kong-migration:
    image: kong:2.4
    command: kong migrations bootstrap
    restart: on-failure
    environment:
      KONG_PG_HOST: database
      KONG_PG_PASSWORD: kong
    depends_on:
      - database
  kong:
    image: ghcr.io/nodis-com-br/kong
    build:
      context: .
    restart: always
    environment:
      KONG_PG_HOST: database
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PLUGINS: nodis-app-auth-kong-plugin
    depends_on:
      - kong-migration
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"
    volumes:
      - ./kong/plugins/nodis-app-auth-kong-plugin:/usr/local/share/lua/5.1/kong/plugins/nodis-app-auth-kong-plugin

  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:kong@database:5432/konga_db"
    restart: on-failure
    links:
      - database
    depends_on:
      - database
  konga:
    image: pantsel/konga:next
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: database
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - database
    ports:
      - "1337:1337"
